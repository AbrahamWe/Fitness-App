{"ast":null,"code":"import _regeneratorRuntime from\"/Users/abrahamwemida/Documents/GitHub/Fitness-App/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/abrahamwemida/Documents/GitHub/Fitness-App/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/abrahamwemida/Documents/GitHub/Fitness-App/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import Pagination from'@mui/material/Pagination';import{Box,Stack,Typography}from'@mui/material/';import ExerciseCard from'./ExerciseCard';import{exerciseOptions,fetchData}from'../utils/fetchData';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Exercises=function Exercises(_ref){var exercises=_ref.exercises,setExercises=_ref.setExercises,bodyPart=_ref.bodyPart;var _useState=useState(1),_useState2=_slicedToArray(_useState,2),currentPage=_useState2[0],setCurrentPage=_useState2[1];var exercisesPerPage=9;var indexOfLastExercise=currentPage*exercisesPerPage;var indexOfFirstExercise=indexOfLastExercise-exercisesPerPage;var currentExercises=exercises.slice(indexOfFirstExercise,indexOfLastExercise);var paginate=function paginate(e,value){setCurrentPage(value);window.scrollTo({top:1800,behavior:'smooth'});};useEffect(function(){var fetchExerciesData=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var exercisesData;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:exercisesData=[];if(!(bodyPart==='all')){_context.next=7;break;}_context.next=4;return fetchData('https://exercisedb.p.rapidapi.com/exercises',exerciseOptions);case 4:exercisesData=_context.sent;_context.next=10;break;case 7:_context.next=9;return fetchData(\"https://exercisedb.p.rapidapi.com/exercises/bodyPart/\".concat(bodyPart),exerciseOptions);case 9:exercisesData=_context.sent;case 10:setExercises(exercisesData);case 11:case\"end\":return _context.stop();}}},_callee);}));return function fetchExerciesData(){return _ref2.apply(this,arguments);};}();fetchExerciesData();},[bodyPart]);return/*#__PURE__*/_jsxs(Box,{id:\"exercises\",sx:{mt:{lg:'110px'}},mt:\"50px\",p:\"20px\",children:[/*#__PURE__*/_jsx(Typography,{variant:\"h3\",mb:\"46px\",children:\"Showing Results\"}),/*#__PURE__*/_jsx(Stack,{direction:\"row\",sx:{gap:{lg:'110px',xs:'50px'}},flexWrap:\"wrap\",justifyContent:\"center\",children:currentExercises.map(function(exercise,index){return/*#__PURE__*/_jsx(ExerciseCard,{exercise:exercise},index);})}),/*#__PURE__*/_jsx(Stack,{mt:\"100px\",alignItems:\"center\",children:exercises.length>9&&/*#__PURE__*/_jsx(Pagination,{color:\"standard\",shape:\"rounded\",defaultPage:1,count:Math.ceil(exercises.length/exercisesPerPage),page:currentPage,onChange:paginate,size:\"large\"})})]});};export default Exercises;","map":{"version":3,"names":["React","useEffect","useState","Pagination","Box","Stack","Typography","ExerciseCard","exerciseOptions","fetchData","Exercises","exercises","setExercises","bodyPart","currentPage","setCurrentPage","exercisesPerPage","indexOfLastExercise","indexOfFirstExercise","currentExercises","slice","paginate","e","value","window","scrollTo","top","behavior","fetchExerciesData","exercisesData","mt","lg","gap","xs","map","exercise","index","length","Math","ceil"],"sources":["/Users/abrahamwemida/Documents/GitHub/Fitness-App/src/components/Exercises.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Pagination from '@mui/material/Pagination';\nimport { Box, Stack, Typography } from '@mui/material/';\nimport ExerciseCard from './ExerciseCard';\nimport { exerciseOptions, fetchData } from '../utils/fetchData';\n\n\n\nconst Exercises = ({exercises, setExercises, bodyPart}) => {\n    const [currentPage, setCurrentPage] = useState(1);\n    const exercisesPerPage = 9;\n    const indexOfLastExercise = currentPage * exercisesPerPage;\n    const indexOfFirstExercise = indexOfLastExercise - exercisesPerPage;\n    const currentExercises = exercises.slice(indexOfFirstExercise, indexOfLastExercise);\n    const paginate = (e, value) => {\n        setCurrentPage(value);\n\n        window.scrollTo({ top: 1800, behavior: 'smooth'})\n    }\n\n    useEffect(() => {\n        const fetchExerciesData = async () => {\n            let exercisesData = [];\n\n            if (bodyPart === 'all'){\n                exercisesData = await fetchData('https://exercisedb.p.rapidapi.com/exercises', exerciseOptions);\n            } else {\n                exercisesData = await fetchData(`https://exercisedb.p.rapidapi.com/exercises/bodyPart/${bodyPart}`, exerciseOptions);\n            }\n\n            setExercises(exercisesData);\n        }\n        fetchExerciesData();\n    }, [bodyPart]);\n\n  return (\n    <Box id=\"exercises\"\n        sx={{mt: { lg: '110px' }}}\n        mt=\"50px\"\n        p=\"20px\"\n    >\n        <Typography variant=\"h3\" mb=\"46px\">\n            Showing Results \n        </Typography>\n        <Stack direction=\"row\" sx={{ gap:{ lg: '110px', xs: '50px' }}}\n        flexWrap=\"wrap\" justifyContent=\"center\">\n            {currentExercises.map((exercise, index) => (\n                <ExerciseCard key={index} exercise={exercise}/>\n            ))}\n\n        </Stack>\n        <Stack mt=\"100px\" alignItems=\"center\">\n                {exercises.length > 9 && (\n                    <Pagination \n                        color=\"standard\"\n                        shape=\"rounded\"\n                        defaultPage={1}\n                        count={Math.ceil(exercises.length / exercisesPerPage)}\n                        page={currentPage}\n                        onChange={paginate}\n                        size=\"large\"\n                    />\n                ) }\n        </Stack>\n\n    </Box>\n  )\n}\n\nexport default Exercises"],"mappings":"qaAAA,MAAOA,MAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,MAAOC,WAAU,KAAM,0BAA0B,CACjD,OAASC,GAAG,CAAEC,KAAK,CAAEC,UAAU,KAAQ,gBAAgB,CACvD,MAAOC,aAAY,KAAM,gBAAgB,CACzC,OAASC,eAAe,CAAEC,SAAS,KAAQ,oBAAoB,CAAC,wFAIhE,GAAMC,UAAS,CAAG,QAAZA,UAAS,MAA4C,IAAvCC,UAAS,MAATA,SAAS,CAAEC,YAAY,MAAZA,YAAY,CAAEC,QAAQ,MAARA,QAAQ,CACjD,cAAsCX,QAAQ,CAAC,CAAC,CAAC,wCAA1CY,WAAW,eAAEC,cAAc,eAClC,GAAMC,iBAAgB,CAAG,CAAC,CAC1B,GAAMC,oBAAmB,CAAGH,WAAW,CAAGE,gBAAgB,CAC1D,GAAME,qBAAoB,CAAGD,mBAAmB,CAAGD,gBAAgB,CACnE,GAAMG,iBAAgB,CAAGR,SAAS,CAACS,KAAK,CAACF,oBAAoB,CAAED,mBAAmB,CAAC,CACnF,GAAMI,SAAQ,CAAG,QAAXA,SAAQ,CAAIC,CAAC,CAAEC,KAAK,CAAK,CAC3BR,cAAc,CAACQ,KAAK,CAAC,CAErBC,MAAM,CAACC,QAAQ,CAAC,CAAEC,GAAG,CAAE,IAAI,CAAEC,QAAQ,CAAE,QAAQ,CAAC,CAAC,CACrD,CAAC,CAED1B,SAAS,CAAC,UAAM,CACZ,GAAM2B,kBAAiB,6FAAG,uJAClBC,aAAa,CAAG,EAAE,MAElBhB,QAAQ,GAAK,KAAK,gDACIJ,UAAS,CAAC,6CAA6C,CAAED,eAAe,CAAC,QAA/FqB,aAAa,mEAESpB,UAAS,gEAAyDI,QAAQ,EAAIL,eAAe,CAAC,QAApHqB,aAAa,uBAGjBjB,YAAY,CAACiB,aAAa,CAAC,CAAC,uDAC/B,kBAVKD,kBAAiB,2CAUtB,CACDA,iBAAiB,EAAE,CACvB,CAAC,CAAE,CAACf,QAAQ,CAAC,CAAC,CAEhB,mBACE,MAAC,GAAG,EAAC,EAAE,CAAC,WAAW,CACf,EAAE,CAAE,CAACiB,EAAE,CAAE,CAAEC,EAAE,CAAE,OAAQ,CAAC,CAAE,CAC1B,EAAE,CAAC,MAAM,CACT,CAAC,CAAC,MAAM,wBAER,KAAC,UAAU,EAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,6BAErB,cACb,KAAC,KAAK,EAAC,SAAS,CAAC,KAAK,CAAC,EAAE,CAAE,CAAEC,GAAG,CAAC,CAAED,EAAE,CAAE,OAAO,CAAEE,EAAE,CAAE,MAAO,CAAC,CAAE,CAC9D,QAAQ,CAAC,MAAM,CAAC,cAAc,CAAC,QAAQ,UAClCd,gBAAgB,CAACe,GAAG,CAAC,SAACC,QAAQ,CAAEC,KAAK,qBAClC,KAAC,YAAY,EAAa,QAAQ,CAAED,QAAS,EAA1BC,KAAK,CAAuB,EAClD,CAAC,EAEE,cACR,KAAC,KAAK,EAAC,EAAE,CAAC,OAAO,CAAC,UAAU,CAAC,QAAQ,UAC5BzB,SAAS,CAAC0B,MAAM,CAAG,CAAC,eACjB,KAAC,UAAU,EACP,KAAK,CAAC,UAAU,CAChB,KAAK,CAAC,SAAS,CACf,WAAW,CAAE,CAAE,CACf,KAAK,CAAEC,IAAI,CAACC,IAAI,CAAC5B,SAAS,CAAC0B,MAAM,CAAGrB,gBAAgB,CAAE,CACtD,IAAI,CAAEF,WAAY,CAClB,QAAQ,CAAEO,QAAS,CACnB,IAAI,CAAC,OAAO,EAEnB,EACD,GAEN,CAEV,CAAC,CAED,cAAeX,UAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}